package com.example.samuraitravel.controller;

import java.util.List;

import org.springframework.data.domain.Pageable;
import org.springframework.data.web.PageableDefault;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.example.samuraitravel.entity.Review;
import com.example.samuraitravel.form.ReviewEditForm;
import com.example.samuraitravel.form.ReviewRegisterForm;
import com.example.samuraitravel.repository.HouseRepository;
import com.example.samuraitravel.repository.ReviewRepository;
import com.example.samuraitravel.security.UserDetailsImpl;
import com.example.samuraitravel.service.ReviewService;

@Controller
@RequestMapping("/house/{houseId}/reviews")
public class ReviewController {
	private final ReviewRepository reviewRepository;
	private final ReviewService reviewService;
	private final HouseRepository houseRepository;
	
	public ReviewController(ReviewRepository reviewRepository, ReviewService reviewService, HouseRepository houseRepository) {
		this.reviewRepository = reviewRepository;
		this.reviewService = reviewService;
		this.houseRepository = houseRepository;
	}
	
	@GetMapping
	public String index(@PathVariable(name = "houseId") Integer houseId, @PageableDefault(page = 0, size = 10, sort = "id") Pageable pageable, Model model) {
		List<Review> review = reviewRepository.findAll();
		
		model.addAttribute("review", review);
		
		return "houses/show/review/index";
	}
	
	@GetMapping("/register")
	public String register(@PathVariable(name = "houseId") Integer houseId, Model model) {
		return 
	}
	
	@PostMapping("/create")
	public String create(@PathVariable(name = "houseId") Integer houseId,
						   @AuthenticationPrincipal UserDetailsImpl userDetailsImpl,
						   @ModelAttribute @Validated ReviewRegisterForm reviewRegisterForm,
						   BindingResult bindindResult,
						   RedirectAttributes redirectAttributeds,
					       Model model) {
		
		return "redirect:/houses/review";
	}
	
	@PostMapping("/{reviewId}/edit")
	public String edit(@PathVariable(name = "houseId") Integer houseId,@PathVariable(name = "reviewId") Integer reviewId, Model model) {
		return
	}
	
	@PostMapping("/{reviewId}/update")
	public String update(@PathVariable(name = "houseId")Integer houseId,
			             @PathVariable(name = "reviewId")Integer reviewId,
			             @ModelAttribute @Validated ReviewEditForm reviewEditForm,
			             BindingResult bindingResult,
			             RedirectAttributes redirectAttributes,
			             Model model) {
		return
	}
	
	@PostMapping("/{reviewId}/delete")
	public String delete(@PathVariable(name = "reviewId")Integer reviewId, RedirectAttributes redirectAttributes) {
		return 
	}
}
